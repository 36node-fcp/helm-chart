apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
  labels:
    {{- include "offline-map.labels" . | nindent 4 }}
    app.kubernetes.io/component: offline-map
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      {{- include "offline-map.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: offline-map
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "offline-map.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: offline-map
    spec:
      {{- include "offline-map.images.pullSecrets" (dict "images" (list .Values.image) "global" .Values.global) | nindent 6 }}
      {{- if .Values.runInitContainers }}
      initContainers:
        - name: init-download
          image: {{ include "offline-map.images.image" ( dict "imageRoot" .Values.image "global" .Values.global ) }}
          command: ['sh', '-c', 'if [ ! -f /opt/map/local.mbtiles ]; then wget -O /opt/map/local.mbtiles https://minio-api.z-ctyun-prod.36node.com/36node-dev/map/{{ .Values.mbtiles }}; fi']
          volumeMounts:
            - name: data
              mountPath: {{ .Values.persistence.mountPath }}
      {{- end }}
      containers:
        - name: offline-map
          image: {{ include "offline-map.images.image" ( dict "imageRoot" .Values.image "global" .Values.global ) }}
          imagePullPolicy: {{ .Values.image.pullPolicy | default .Values.global.imagePullPolicy }}
          env:
            - name: ROOT_URL
              value: "{{ .Values.path }}"
            {{- range $key, $value := .Values.env }}
            - name: {{ $key }}
              value: "{{ $value }}"
            {{- end }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          volumeMounts:
            - name: data
              mountPath: {{ .Values.persistence.mountPath }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: data
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.name }}
          {{- else }}
          emptyDir: {}
          {{- end }}
