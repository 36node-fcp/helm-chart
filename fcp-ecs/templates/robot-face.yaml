{{ if .Values.robotFace.enabled }}
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.robotFace.name }}
  labels:
    {{- include "robot-hengtong.selectorLabels" . | nindent 4 }}
spec:
  type: {{ .Values.robotFace.service.type | default .Values.service.type }}
  ports:
    - port: {{ .Values.robotFace.service.port | default .Values.service.port }}
      targetPort: http
      protocol: TCP
      name: http
  selector:
    {{- include "robot-hengtong.selectorLabels" . | nindent 4 }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.robotFace.name }}
  labels:
    {{- include "fcp-ecs.labels" . | nindent 4 }}
    {{- include "robot-hengtong.selectorLabels" . | nindent 4 }}
spec:
  replicas: {{ .Values.robotFace.replicas }}
  minReadySeconds: 10
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      {{- include "robot-hengtong.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "robot-hengtong.selectorLabels" . | nindent 8 }}
    spec:
      restartPolicy: Always
      containers:
        - name: {{ .Values.robotFace.name }}
          image: "{{ .Values.robotFace.image.repository }}:{{ .Values.robotFace.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.robotFace.image.pullPolicy | default .Values.pullPolicy }}
          env:
            - name: LOG_LEVEL
              value: "{{ .Values.robotFace.env.logLevel }}"
            - name: NAME
              value: "{{ .Values.robotFace.env.name }}"
            - name: SOURCE_NAME
              value: "{{ .Values.robotFace.env.sourceName }}"
            - name: ROBOT_ENDPOINT
              value: "{{ .Values.robotFace.env.robotEndpoint }}"
            - name: FCP_ENDPOINT
              value: "{{ .Values.robotFace.env.fcpEndpoint }}"
            - name: CACHE_REDIS_URL
              value: "{{ .Values.robotFace.env.redisUri }}"
            - name: MQTT_PASSWORD
              value: "{{ .Values.robotFace.env.mqttPassword }}"
            - name: REDIS_GLOBAL_PREFIX
              value: "{{ .Values.robotFace.env.redisGlobalPrefix }}"
            - name: MQTT_TOPIC_GANTRY_DEVICE
              value: "{{ .Values.robotFace.env.mqttTopicGantryDevice}}"
            - name: MQTT_TOPIC_GANTRY
              value: "{{ .Values.robotFace.env.mqttTopicGantry }}"
            - name: MQTT_TOPIC_ILLEGAL_RECORD_PERSON_CREATE
              value: "{{ .Values.robotFace.env.mqttTopicIllegalRecordPersonCreate }}"
            - name: MQTT_TOPIC_ILLEGAL_RECORD_NONMOTOR_CREATE
              value: "{{ .Values.robotFace.env.mqttTopicIllegalRecordNonmotorCreate }}"
            - name: MQTT_TOPIC_ILLEGAL_RECORD_PERSON_UPDATE
              value: "{{ .Values.robotFace.env.mqttTopicIllegalRecordPersonUpdate }}"
            - name: MQTT_TOPIC_ILLEGAL_RECORD_NONMOTOR_UPDATE
              value: "{{ .Values.robotFace.env.mqttTopicIllegalRecordNonmotorUpdate }}"
            - name: MQTT_TOPIC_ILLEGAL_RECORD_PERSON_DELETE
              value: "{{ .Values.robotFace.env.mqttTopicIllegalRecordPersonDelete }}"
            - name: MQTT_TOPIC_ILLEGAL_RECORD_NONMOTOR_DELETE
              value: "{{ .Values.robotFace.env.mqttTopicIllegalRecordNonmotorDelete }}"
            - name: MQTT_TOPIC_ILLEGAL_RECORD_PERSON_CLOSE
              value: "{{ .Values.robotFace.env.mqttTopicIllegalRecordPersonClose }}"
            - name: MQTT_TOPIC_ILLEGAL_RECORD_NONMOTOR_CLOSE
              value: "{{ .Values.robotFace.env.mqttTopicIllegalRecordNonmotorClose }}"
            - name: MQTT_NOTIFY_PERSON
              value: "{{ .Values.robotFace.env.mqttNotifyPerson }}"
            - name: MQTT_TOPIC_WARNING
              value: "{{ .Values.robotFace.env.mqttTopicWarning }}"
            - name: MQTT_URL
              value: "{{ .Values.robotFace.env.mqttUri }}"
            - name: MQTT_USERNAME
              value: "{{ .Values.robotFace.env.mqttUsername }}"
            - name: NODE_ENV
              value: "{{ .Values.robotFace.env.nodeEnv }}"
            - name: PORT
              value: "{{ .Values.robotFace.env.port }}"
            - name: URL_PREFIX
              value: "{{ .Values.robotFace.path }}"
          ports:
            - name: http
              containerPort: {{ .Values.robotFace.service.port | default .Values.service.port }}
              protocol: TCP
          resources:
            {{- if .Values.robotFace.resources }}
            {{- toYaml .Values.robotFace.resources | nindent 12 }}
            {{- else }}
            {{- toYaml .Values.resources | nindent 12 }}
            {{- end }}
{{- end }}